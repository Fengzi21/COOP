#this parameter file is used by FCoadd

#total number of maps
num_maps = 2


#map files
map1 = act16/deep56_coadd_I.fits
map2 = act16/sim_2_I.fits
map3 = act16/set2.fits
map4 = act16/set3.fits

#weight files
#weight1 = act16/deep56_array_2_season2_iqu_c7v5_night_strict_nomoon_4way_set_0_8Dec15_beams_srcsub_mapsub_weights_I.fits
#weight2 = act16/deep56_array_2_season2_iqu_c7v5_night_strict_nomoon_4way_set_1_8Dec15_beams_srcsub_mapsub_weights_I.fits
#weight3 = act16/deep56_array_2_season2_iqu_c7v5_night_strict_nomoon_4way_set_2_8Dec15_beams_srcsub_mapsub_weights_I.fits
#weight4 = act16/deep56_array_2_season2_iqu_c7v5_night_strict_nomoon_4way_set_3_8Dec15_beams_srcsub_mapsub_weights_I.fits

#output
output_map = act16/fnoise1_I.fits
output_weight = act16/simadd_weight_I.fits

##other settings

#================ filtering ===================
#do filtering
do_filtering = F

#highpass filter
highpass_lmin = 250

#lowpass_filter 
lowpass_lmax = 2500

#gaussian smoothing
fwhm_arcmin = 0.d0

#===================================================
#regularize outliers
reg_limit = 0.

#=====================================================
#analyze each map and print simple statistics
analyze_maps = F

#======================================================
#truncate when weight < mean weight * X, set X below
truncate_weight = 0.3

#check if the weight map is positive
positive_weights = F

#multiply the map by some coefficients
coef1 = 2.
coef2 = -2.
#coef3 = 1.
#coef4 = 1.
