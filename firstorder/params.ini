##this ini file can be used for SolvePert, CalcCls and CalcMP


#root for output files 
root = lcdm

# fixed wave number  (for SolvePert); COOP uses fixed k arrays so the actual k will be the closest one in the array but not exactly the number given here.
kMpc = 0.05
#output at fixed z (for SolvePert), only used when kMpc is commented out; COOP uses fixed z arrays so the actual z will be the closest one in the array but not exactly the number given here.
#output_redshift = 0

lmax_scalar = 2200
lmax_tensor = 1500

#output variables (for SolvePert)
##options are:
## kMpc = wave number k in unit of Mpc^{-1}
## a = scale factor (normalized to a_0 = 1 today)
## z = redshift
## lna = \ln a
## tau = H_0 * conformal time
## t = H_0 * age
## H = H / H_0
## Ha = H a / (H_0 a_0)
## T00 = T_{00} a^2
## T0i = T_{0i} a^2
## G00 = G_{00} a^2
## G0i = G_{0i} a^2
## Phi = Newtonial potential
## Psi = Space Curvature
## dPsidlna = d Psi / d ln a
## dPhidlna = d Phi / d ln a
## delta_c = CDM density perturbation in Newtonian gauge
## v_c = CDM velocity
## delta_c_sync = CDM density perturbation in comoving synchronous gauge
## delta_b = baryon density perturbation in Newtonian gauge
## v_b = baryon velocity in Newtonian gauge
## delta_g = radiation density perturbation
## v_g = radiation fluid velocity
## delta_nu = (massless) neutrino density perturbation
## v_nu = (massless) neutrino velocity
## pi = pi (pi as defined for EFT dark energy, in unit of H0^{-1})
## DE_alpha (alpha = alpha_K + 6 alpha_B^2 for EFT dark energy)
## DE_alpha_cs2 (alpha * c_s^2 for EFT dark energy)
## DE_alpha_M (alpha_M for EFT dark energy)
## DE_alpha_T (alpha_T for EFT dark energy)
## DE_alpha_K (alpha_K for EFT dark energy)
## DE_alpha_B (alpha_B for EFT dark energy)
## DE_alpha_H (alpha_H for EFT dark energy)
## DE_M_star  (M* / M_p for EFT dark energy)
variables  =  lna Phi Psi
#variables = kMpc Phi Psi DE_cs2 DE_alpha  DE_alpha_B
#variables = lna T00 G00 T0i G0i Phi Psi delta_c v_c delta_b v_b delta_g v_g delta_nu v_nu pi H DE_M_star DE_alpha_cs2
#variables = kMpc T00 G00 T0i G0i Phi Psi delta_c v_c delta_b v_b delta_g v_g delta_nu v_nu pi H DE_M_star DE_alpha_cs2


#======parameters====================
#physical density of baryon at z  = 0; in the EFT dark energy description, this is actually \Omega_b h^2 (M_*^2/M_p)^2
ombh2 = 0.02222
#physical density of CDM at z  = 0; in the EFT dark energy description, this is actually \Omega_c h^2 (M_*^2/M_p)^2
omch2 = 0.1197

#Hubble parameter
H0 = 70.
#if you want to keep the primary CMB anistropy fixed, it is better to fix theta instead of H0
#theta (in unit of 1/100) is only used when H0 is commented out 
#theta = 1.04085
#h_trial_min = 0.65
#h_trial_max = 0.75


#reionization optical depth
tau = 0.078

# amplitude of scalar power spectrum
As = 2.2e-9
#tilt of scalar power spectrum
ns = 0.9655
#tensor to scalar ratio
r = 0.

#dark energy equation of state
#standard w = w_0 + w_a (1-a)
de_w = -1.
de_wa = 0.
##if the standard w0wa parametrization is commented out, uses the quintessence motivated (for DARK_ENERGY_MODEL = COUPLED_DE)
#de_epss = 0.1d0
#de_epsinf = 0.d0
#de_zetas = 0.d0
#de_betas = 6.d0

############ EFT DE w option ###############################
#if w is defined as the effective background w that gives the same expansion history in wCDM model (only matters when alpha_M is nonzero); However, when you are using cs^2, r_B/M/H/T parametrization (see below scheme 1), this line is ignored and w_is_background is always forced to be T. 
w_is_background = T

##################  EFT DE alpha functions ############################
###################### scheme 1 constant c_s^2 model (when de_cs2 is defined below) #################
#EFT dark energy  (you have to compile the code with DARK_ENERGY_MODEL = EFT in configure.in);
##use c_s^2 to parameterize alpha's. In this case w_is_background is forced to be true and you need to set w = constant (de_wa = 0)
##in this scheme
#alpha_{B,M,H,T} = alpha_0 r_{B, M, H, T} \Omega_{DE}(a)/\Omega_{DE,0} where \Omega_{DE} is computed for the same cosmology itself; alpha_0 = alpha_K0 + 6 alpha_B0^2; and alpha_K is determined by c_s^2.
de_cs2 = 0.1
de_r_B  = -0.1
de_r_M = 0.
de_r_H = 0.
de_r_T = 0.
#the code searches solution in the range 0< alpha_K0 + 6 alpha_B0^2 < alpha0_max; set alpha0_max here:
de_alpha0_max = 100.

########## scheme 2, predefined function (if above de_cs2 is commented out) ####################
#if you set alpha_power >=0 , alpha_X(a) = alpha_{X0} a ^ {alpha_power}
#otherwise alpha_X(a) = alpha_{X0} \Omega_{DE}(a)/\Omega_{DE,0} where \Omega_{DE} is computed for a fixed LambdaCDM cosmology with \Omega_{m0} = 0.3
#alpha_power = 4
###the alpha_X0 values
de_alpha_M0 = 0.
de_alpha_K0 = 0.
de_alpha_B0 = 0.
de_alpha_T0 = 0.
de_alpha_H0 = 0.


################for Coupled CDM-DE (you have to compile the code with DARK_ENERGY_MODEL = COUPLED_DE in configure.in) ###########################
##the standard parametrization
##the coupling between CDM and dark energy
##for f(R) Q = 0.4082
de_Q = 0.

##if de_np_index = 0, w(a) and Q are used to initialize the model (V(phi) is derived from w(a))
### if de_np_index is nonzero, negative powerlaw or Hu-Sawikic f(R) model is used
###if de_fR_epsilon = 0, negative power law V = V0 * phi^ (- de_np_index) is used; V0 is automatically determined to give the correct Omega_Lambda
###if de_fR_epsilon is nonzero Hu-Sawicki model is used
####f(R) = R - 2 Lambda + 2 Lambda/[n/epsilon (R/Lambda)^n+1]; where n = de_np_index and epsilon  = de_fR_epsilon; Lambda = 3 Omega_Lambda in COOP unitxs
de_np_index = 1
de_fR_epsilon = 0.01
baryon_is_coupled = T


